syntax = "proto3";

package asset;

option go_package = "/assetpb";

import "google/api/annotations.proto";

// Message for data Asset
message Asset {
    int32 asset_id = 1;
    string asset_id_hash = 2;
    string asset_name = 3;
    string asset_brand = 4;
    string asset_specification = 5;
    int32 asset_classification = 6;
    string asset_classification_name = 7;
    string asset_condition = 8;
    int32 asset_pic = 9;
    string asset_pic_name = 10;
    string asset_purchase_date = 11;
    string asset_status = 12;
    int32 classification_acquisition_value = 13;
    int32 classification_last_book_value = 14;
    string created_at = 15;
    string updated_at = 16;
    int32 outlet_id = 17;
    string outlet_name = 18;
    int32 area_id = 19;
    string area_name = 20;
    string asset_image = 21;
    int32 deprecation_value = 22;
    int32 personal_responsible_id = 23;
    string personal_name = 24;
    int32 asset_age = 25;
}

message CreateAssetRequest {
    string asset_name = 1;
    string asset_brand = 2;
    string asset_specification = 3;
    int32 asset_classification = 4;
    string asset_condition = 5;
    int32 asset_pic = 6;
    string asset_purchase_date = 7;
    string asset_status = 8;
    int32 classification_acquisition_value = 9;
    int32 outlet_id = 10;
    string asset_image = 11;
    int32 personal_responsible_id = 12;
    int32 area_id = 13;
}

message CreateAssetResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message GetAssetRequest {
    int32 id = 1;
}

message GetAssetByHashRequest {
    string hash_id = 1;
}

message GetAssetByHashResponse {
    Asset data = 1;
    string message = 2;
    string code = 3;
}

message GetAssetResponse {
    Asset data = 1;
    string message = 2;
    string code = 3;
}

message UpdateAssetRequest {
    int32 id = 1;
    string asset_name = 2;
    string asset_brand = 3;
    string asset_specification = 4;
    int32 asset_classification = 5;
    string asset_condition = 6;
    int32 asset_pic = 7;
    string asset_purchase_date = 8;
    string asset_status = 9;
    int32 classification_acquisition_value = 10;
    int32 outlet_id = 11;
    string asset_image = 12;
    int32 personal_responsible_id = 13;
    int32 area_id = 14;
}

message UpdateAssetResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message DeleteAssetRequest {
    int32 id = 1;
}

message DeleteAssetResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message ListAssetsRequest {
    int32 page_number = 1;
    int32 page_size = 2;
    string q = 3;
}

message ListAssetsResponse {
    repeated Asset data = 1;
    int32 total_count = 2;
    int32 page_number = 3;
    int32 page_size = 4;
    string next_page_token = 5;
}

// Message for data Asset Update
message AssetUpdate {
    int32 asset_update_id = 1;
    int32 asset_id = 2;
    string asset_status = 3;
}

message CreateAssetUpdateRequest {
    int32 asset_id = 1;
    string asset_status = 2;
}

message CreateAssetUpdateResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

// Message for data Personal Responsible
message PersonalResponsible {
    int32 personal_id = 1;
    string personal_name = 2;
}

message ListPersonalResponsibleRequest {}

message ListPersonalResponsibleResponse {
    repeated PersonalResponsible data = 1;
    string message = 2;
    string code = 3;
}

// Message for data User
message User {
    int32 nip = 1;
    string user_full_name = 2;
    string user_email = 3;
    string user_password = 4;
    int32 role_id = 5;
    string role_name = 6;
    int32 area_id = 7;
    int32 outlet_id = 8;
}

message CreateUserRequest {
    int32 nip = 1;
    string user_full_name = 2;
    string user_email = 3;
    string user_password = 4;
    int32 role_id = 5;
    int32 area_id = 6;
    int32 outlet_id = 7;
}

message CreateUserResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message GetUserRequest {
    int32 nip = 1;
}

message GetUserResponse {
    string message = 1;
    string code = 2;
    User data = 3;
    bool success = 4;
}

message UpdateUserRequest {
    int32 nip = 1;
    string user_full_name = 2;
    string user_email = 3;
    int32 role_id = 4;
    int32 area_id = 5;
    int32 outlet_id = 6;
}

message UpdateUserResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message DeleteUserRequest {
    int32 nip = 1;
}

message DeleteUserResponse {
    bool success = 1;
}

message ListUsersRequest {
    int32 page_number = 1;
    int32 page_size = 2;
    string q = 3;
}

message ListUsersResponse {
    repeated User data = 1;
    int32 total_count = 2;
    int32 page_number = 3;
    int32 page_size = 4;
    string next_page_token = 5;
}

message ResetPasswordRequest {
    int32 nip = 1;
    string user_password = 2;
    string reset_token = 3;
}

message ResetPasswordResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

// Message for data Role
message Role {
    int32 role_id = 1;
    string role_name = 2;
    string status = 3;
}

message ListRoleRequest {}

message ListRoleResponse {
    repeated Role data = 1;
    string message = 2;
    string code = 3;
}

// Message for data Authorization
message LoginRequest {
    int32 nip = 1;
    string user_password = 2;
}

message LoginResponse {
    string message = 1;
    string code = 2;
    string token = 3;
    bool success = 4;
}

message LogoutRequest {
    string token = 1;
}

message LogoutResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message TokenStore {
    string token = 1;
}

// Message for data Area
message Area {
    int32 area_id = 1;
    string area_name = 2;
}

message ListAreaRequest {}

message ListAreaResponse {
    repeated Area data = 1;
    string message = 2;
    string code = 3;
}

message CreateAreaRequest {
    string area_name = 1;
}

message CreateAreaResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

// Message for data Outlet
message Outlet {
    int32 outlet_id = 1;
    string outlet_name = 2;
}

message ListOutletRequest {
    int32 area_id = 1;
}

message ListOutletResponse {
    repeated Outlet data = 1;
    string message = 2;
    string code = 3;
}

message CreateOutletRequest {
    int32 area_id = 1;
    string outlet_name = 2;
}

message CreateOutletResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

// Message for data Area Outlet
message AreaOutlet {
    int32 area_id = 1;
    int32 outlet_id = 2;
}

// Message for data Classification
message Classification {
    int32 classification_id = 1;
    string classification_name = 2;
    int32 classification_economic_value = 3;
    int32 maintenance_period_id = 4;
    string asset_healthy_param = 5;
    map<string, string> asset_healthy_param_map = 6;
}

message ListClassificationRequest {}

message ListClassificationResponse {
    repeated Classification data = 1;
    string message = 2;
    string code = 3;
}

message CreateClassificationRequest {
    string classification_name = 1;
    int32 classification_economic_value = 2;
    int32 maintenance_period_id = 3;
    string asset_healthy_param = 4;
}

message CreateClassificationResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}

message GetClassificationRequest {
    int32 id = 1;
}

message GetClassificationResponse {
    Classification data = 1;
    string message = 2;
    string code = 3;
}

// Message for data Maintenance Period
message MaintenancePeriod {
    int32 period_id = 1;
    string period_name = 2;
    string maintenance_date = 3;
}

message ListMaintenancePeriodRequest {}

message ListMaintenancePeriodResponse {
    repeated MaintenancePeriod data = 1;
    string message = 2;
    string code = 3;
}

message CreateMaintenancePeriodRequest {
    string period_name = 1;
    string maintenance_date = 2;
}

message CreateMaintenancePeriodResponse {
    string message = 1;
    string code = 2;
    bool success = 3;
}


// All Services
service MAINTENANCEPERIODService {
    rpc ListMaintenancePeriod(ListMaintenancePeriodRequest) returns (ListMaintenancePeriodResponse) {
        option (google.api.http) = {
            get: "/api/periods"
        };
    }

    rpc CreateMaintenancePeriod(CreateMaintenancePeriodRequest) returns (CreateMaintenancePeriodResponse) {
        option (google.api.http) = {
            post: "/api/periods"
            body: "*"
        };
    }
}

service CLASSIFICATIONService {
    rpc ListClassification(ListClassificationRequest) returns (ListClassificationResponse) {
        option (google.api.http) = {
            get: "/api/classifications"
        };
    }

    rpc CreateClassification(CreateClassificationRequest) returns (CreateClassificationResponse) {
        option (google.api.http) = {
            post: "/api/classifications"
            body: "*"
        };
    }

    rpc GetClassification(GetClassificationRequest) returns (GetClassificationResponse) {
        option (google.api.http) = {
            get: "/api/classifications/{id}"
        };
    }
}

service OUTLETService {
    rpc ListOutlet(ListOutletRequest) returns (ListOutletResponse) {
        option (google.api.http) = {
            get: "/api/outlets"
        };
    };

    rpc CreateOutlet(CreateOutletRequest) returns (CreateOutletResponse) {
        option (google.api.http) = {
            post: "/api/outlets"
            body: "*"
        };
    };
}

service AREAService {
    rpc ListArea(ListAreaRequest) returns (ListAreaResponse) {
        option (google.api.http) = {
            get: "/api/areas"
        };
    };

    rpc CreateArea(CreateAreaRequest) returns (CreateAreaResponse) {
        option (google.api.http) = {
            post: "/api/areas"
            body: "*"
        };
    };
}

service AUTHService {
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/api/login"
            body: "*"
        };
    };

    rpc Logout(LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            post: "/api/logout"
            body: "*"
        };
    };
}

service ROLEService {
    rpc ListRole(ListRoleRequest) returns (ListRoleResponse) {
        option (google.api.http) = {
            get: "/api/roles"
        };
    };
}

service USERService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    };
    rpc GetUser(GetUserRequest) returns (GetUserResponse){
        option (google.api.http) = {
            get: "/api/users/{nip}"
        };
    };
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            put: "/api/users/{nip}"
            body: "*"
        };
    };
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
            delete: "/api/users/{nip}"
        };
    };
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            get: "/api/users"
        };
    };
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {
        option (google.api.http) = {
            post: "/api/reset-password"
            body: "*"
        };
    }
}

service ASSETService {
    rpc CreateAsset(CreateAssetRequest) returns (CreateAssetResponse) {
        option (google.api.http) = {
            post: "/api/assets"
            body: "*"
        };
    };
    rpc GetAsset(GetAssetRequest) returns (GetAssetResponse){
        option (google.api.http) = {
            get: "/api/assets/{id}"
        };
    };
    rpc GetAssetByHash(GetAssetByHashRequest) returns (GetAssetByHashResponse){
        option (google.api.http) = {
            get: "/api/assets/hash"
        };
    }
    rpc UpdateAsset(UpdateAssetRequest) returns (UpdateAssetResponse) {
        option (google.api.http) = {
            put: "/api/assets/{id}"
            body: "*"
        };
    };
    rpc DeleteAsset(DeleteAssetRequest) returns (DeleteAssetResponse) {
        option (google.api.http) = {
            delete: "/api/assets/{id}"
        };
    };
    rpc ListAssets(ListAssetsRequest) returns (ListAssetsResponse) {
        option (google.api.http) = {
            get: "/api/assets"
        };
    };
}

service ASSETUPDATEService {
    rpc CreateAssetUpdate(CreateAssetUpdateRequest) returns (CreateAssetUpdateResponse);
};

service PERSONALRESPONSIBLEService {
    rpc ListPersonalResponsible(ListPersonalResponsibleRequest) returns (ListPersonalResponsibleResponse) {
        option (google.api.http) = {
            get: "/api/personal-responsibles"
        };
    };
}